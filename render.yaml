# ============================================================
# üåü Render Blueprint ‚Äî AI Shorts Generator (Production)
# Version: 1.0.0 (Top 0,1%)
# ============================================================
services:
  - type: web
    name: ai-video-generator
    env: node
    plan: standard   # Plan payant, permet GPU / scaling
    region: frankfurt
    buildCommand: |
      echo "üöÄ [Render] Installing Node deps..."
      npm ci
      echo "üêç [Render] Setting up Python venv..."
      python3 -m venv tts-env
      source tts-env/bin/activate
      pip install --upgrade pip
      pip install -r requirements.txt
      echo "‚úÖ [Render] Build complete."
    startCommand: |
      echo "üåü Launching AI Shorts Generator..."
      bash ./start-server.sh
    autoDeploy: true
    branch: main
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PYTHONPATH
        value: ./tts-env/bin/python
      - key: LOG_LEVEL
        value: info
      # Secrets √† ajouter uniquement via le dashboard Render
      # - key: GROQ_API_KEY
      #   sync: false
      # - key: OPENAI_API_KEY
      #   sync: false
      # - key: PLAYHT_API_KEY
      #   sync: false
    healthCheckPath: /
    disk:
      name: uploads
      mountPath: /mnt/data
      sizeGB: 10
    scaling:
      minInstances: 1
      maxInstances: 4          # Scaling horizontal possible
      targetCPUPercent: 60     # Ajustable (1-90)
      targetMemoryPercent: 70  # Ajustable (1-90)
# ============================================================
# Notes :
# - Pr√©par√© pour instances payantes / GPU / scaling
# - Auto d√©ploiement √† chaque push sur main
# - Secrets (API keys) √† configurer uniquement via dashboard
# - Disk 10GB pour m√©dias lourds (vid√©os)
# - Scaling horizontal + surveillance CPU/Mem pour perf optimale
# ============================================================
